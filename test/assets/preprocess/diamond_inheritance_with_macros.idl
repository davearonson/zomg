// TEST: #ifndef
//
#ifndef IDL2REPO_BUGS_IDL

// TEST: #define
//
#define IDL2REPO_BUGS_IDL

// TEST: #include
//
#include "base_for_diamond_inheritance_with_macros.idl"

// TEST: C-style comments
//

// TEST: #if
//

#if !defined(MACRO1)
    #define MACRO1 interface
#endif

#if defined(MACRO1)
    #define MACRO2 MainGrid
#endif

MACRO1 MACRO2
{
    void getofMainGrid(in short n);
    long setofMainGrid(inout short n);

    readonly attribute short length;  // length of the gridmain
    attribute short breadth;   // breadth of the gridmain

    exception exMG { string reason; };
};


interface BaseGrid : MainGrid {
    void getofBaseGrid(in short n);
    long setofBaseGrid(in short n);

    readonly attribute short roAtrBG ;  // length of the gridmain
    attribute short atrBG;   // breadth of the gridmain

    exception exBG { string reason; };
};


interface GridBase : MainGrid {

    void getofGridBase(in short n);
    long setofGridBase(in short n);

    readonly attribute short roAtrGB ;  // length of the gridmain
    attribute short atrGB;   // breadth of the gridmain

    exception exGB { string reason; };
};

interface Grid : BaseGrid, GridBase {
    readonly attribute short height;  // height of the grid
    readonly attribute short width;   // width of the grid

    // IDL operations

    // set the element [n,m] of the grid, to value:
    void set(in short n, in short m, in long value);

    // return element [n,m] of the grid:
    long get(in short n, in short m);
};

#endif